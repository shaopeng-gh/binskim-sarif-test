{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json",
  "version": "2.1.0",
  "runs": [
    {
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///C:/i/openvpn-pipeline-artifacts/"
        }
      },
      "results": [
        {
          "ruleId": "BA2008",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "Error",
            "arguments": [
              "libcrypto-1_1-arm64.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/libcrypto-1_1-arm64.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "message": {
            "id": "Warning_NativeWithInsecureStaticLibraryCompilands",
            "arguments": [
              "libopenvpnmsica.dll",
              "Microsoft (R) ARM Macro Assembler : masm : 14.29.30034.2 : LIBCMT.lib (arm64secgs.obj,atomics.obj,chkstk.obj,secpushpop.obj)\r\nMicrosoft (R) ARM Macro Assembler : masm : 14.29.30034.2 : libvcruntime.lib (handler.obj,handlers.obj,memcmp.obj,memcpy.obj,memset.obj,notify.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : LIBCMT.lib (cpu_disp.obj,dyn_tls_init.obj,gs_cookie.obj,gs_report.obj,gs_support.obj,guard_support.obj,loadcfg.obj,pesect.obj,ucrt_detection.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : libvcruntime.lib (jbcxrval.obj,jmpuwind.obj,strchr.obj,strrchr.obj,wcschr.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : LIBCMT.lib (argv_mode.obj,default_local_stdio_options.obj,delete_scalar.obj,delete_scalar_size.obj,dll_dllmain.obj,gshandler.obj,gshandlereh.obj,initializers.obj,initsect.obj,std_type_info_static.obj,tncleanup.obj,utility.obj,utility_desktop.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : libvcruntime.lib (chandler_noexcept.obj,ehhelpers.obj,ehstate.obj,frame.obj,initialization.obj,locks.obj,per_thread_data.obj,purevirt.obj,purevirt_data.obj,riscchandler.obj,risctrnsctrl.obj,std_exception.obj,std_type_info.obj,throw.obj,undname.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/libopenvpnmsica.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "Error_NativeWithInsecureDirectCompilands",
            "arguments": [
              "libopenvpnmsica.dll",
              "Microsoft (R) Optimizing Compiler : c : 19.29.30136.0 : [directly linked] (dllmain.obj,error.obj,msica_arg.obj,msiex.obj,openvpnmsica.obj,tap.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/libopenvpnmsica.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2025",
          "ruleIndex": 2,
          "message": {
            "id": "Warning",
            "arguments": [
              "libopenvpnmsica.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/libopenvpnmsica.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2026",
          "ruleIndex": 3,
          "message": {
            "id": "Warning",
            "arguments": [
              "libopenvpnmsica.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/libopenvpnmsica.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2008",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "Error",
            "arguments": [
              "libpkcs11-helper-1.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/libpkcs11-helper-1.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2008",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "Error",
            "arguments": [
              "libssl-1_1-arm64.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/libssl-1_1-arm64.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2008",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "Error",
            "arguments": [
              "lzo2.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/lzo2.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "message": {
            "id": "Warning_NativeWithInsecureStaticLibraryCompilands",
            "arguments": [
              "openvpn.exe",
              "Microsoft (R) ARM Macro Assembler : masm : 14.29.30034.2 : MSVCRT.lib (arm64secgs.obj,chkstk.obj,secpushpop.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : MSVCRT.lib (cpu_disp.obj,dyn_tls_dtor.obj,dyn_tls_init.obj,gs_cookie.obj,gs_report.obj,gs_support.obj,guard_support.obj,loadcfg.obj,matherr_detection.obj,ucrt_detection.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30136.0 : compat.lib (compat-basename.obj,compat-daemon.obj,compat-dirname.obj,compat-gettimeofday.obj,compat-strsep.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30136.0 : lz4.lib (lz4.c.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : MSVCRT.lib (argv_mode.obj,commit_mode.obj,default_local_stdio_options.obj,denormal_control.obj,env_mode.obj,exe_wmain.obj,file_mode.obj,gshandler.obj,initializers.obj,initsect.obj,invalid_parameter_handler.obj,matherr.obj,new_mode.obj,thread_locale.obj,tncleanup.obj,ucrt_stubs.obj,utility.obj,utility_desktop.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "Error_NativeWithInsecureDirectCompilands",
            "arguments": [
              "openvpn.exe",
              "Microsoft (R) Optimizing Compiler : c : 19.29.30136.0 : [directly linked] (argv.obj,auth_token.obj,base64.obj,block_dns.obj,buffer.obj,clinat.obj,comp.obj,comp-lz4.obj,compstub.obj,console.obj,console_builtin.obj,crypto.obj,crypto_openssl.obj,cryptoapi.obj,dhcp.obj,env_set.obj,error.obj,event.obj,fdmisc.obj,forward.obj,fragment.obj,gremlin.obj,helper.obj,httpdigest.obj,init.obj,interval.obj,list.obj,lladdr.obj,lzo.obj,manage.obj,mbuf.obj,misc.obj,mroute.obj,mss.obj,mstats.obj,mtcp.obj,mtu.obj,mudp.obj,multi.obj,ntlm.obj,occ.obj,openvpn.obj,options.obj,otime.obj,packet_id.obj,perf.obj,ping.obj,pkcs11.obj,pkcs11_openssl.obj,platform.obj,plugin.obj,pool.obj,proto.obj,proxy.obj,ps.obj,push.obj,reliable.obj,route.obj,run_command.obj,schedule.obj,session_id.obj,shaper.obj,sig.obj,socket.obj,socks.obj,ssl.obj,ssl_ncp.obj,ssl_openssl.obj,ssl_util.obj,ssl_verify.obj,ssl_verify_openssl.obj,status.obj,tls_crypt.obj,tun.obj,vlan.obj,win32.obj,win32-util.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2007",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "id": "Error_InsufficientWarningLevel",
            "arguments": [
              "openvpn.exe",
              "2",
              "-c -ID:\\a\\openvpn\\openvpn\\src\\compat -ID:\\a\\openvpn\\openvpn\\ -ID:\\a\\openvpn\\openvpn\\ -ID:\\a\\openvpn\\openvpn\\include -ID:\\a\\openvpn\\openvpn\\vcpkg\\installed\\arm64-windows-ovpn\\include -Zi -nologo -W2 -WX -diagnostics:column -O2 -Oi -Oy- -GL -D_CONSOLE -DNDEBUG -DWIN32 -D_ARM64_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE=1 -Gm- -EHs -EHc -MD -GS -guard:cf -Gy -fp:precise -Qspectre -Zc:wchar_t -Zc:forScope -Zc:inline -external:W2 -Gd -TC -analyze- -FC -errorreport:queue -I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\include\" -I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\atlmfc\\include\" -I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\VS\\include\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\ucrt\" -I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\VS\\UnitTest\\include\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\um\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\shared\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\winrt\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\cppwinrt\" -I\"C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\Include\\um\" -external:I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\include\" -external:I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\atlmfc\\include\" -external:I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\VS\\include\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\ucrt\" -external:I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\VS\\UnitTest\\include\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\um\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\shared\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\winrt\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\cppwinrt\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\Include\\um\" -X",
              "argv.obj [warning level: 2]\r\nauth_token.obj [warning level: 2]\r\nbase64.obj [warning level: 2]\r\nblock_dns.obj [warning level: 2]\r\nbuffer.obj [warning level: 2]\r\nclinat.obj [warning level: 2]\r\ncomp-lz4.obj [warning level: 2]\r\ncomp.obj [warning level: 2]\r\ncompstub.obj [warning level: 2]\r\nconsole_builtin.obj [warning level: 2]\r\ncrypto.obj [warning level: 2]\r\ncryptoapi.obj [warning level: 2]\r\ncrypto_openssl.obj [warning level: 2]\r\ndhcp.obj [warning level: 2]\r\nenv_set.obj [warning level: 2]\r\nerror.obj [warning level: 2]\r\nevent.obj [warning level: 2]\r\nforward.obj [warning level: 2]\r\nfragment.obj [warning level: 2]\r\ngremlin.obj [warning level: 2]\r\nhelper.obj [warning level: 2]\r\nhttpdigest.obj [warning level: 2]\r\ninit.obj [warning level: 2]\r\nlist.obj [warning level: 2]\r\nlzo.obj [warning level: 2]\r\nmanage.obj [warning level: 2]\r\nmbuf.obj [warning level: 2]\r\nmisc.obj [warning level: 2]\r\nmroute.obj [warning level: 2]\r\nmss.obj [warning level: 2]\r\nmtcp.obj [warning level: 2]\r\nmtu.obj [warning level: 2]\r\nmudp.obj [warning level: 2]\r\nmulti.obj [warning level: 2]\r\nntlm.obj [warning level: 2]\r\nocc.obj [warning level: 2]\r\nopenvpn.obj [warning level: 2]\r\noptions.obj [warning level: 2]\r\notime.obj [warning level: 2]\r\npacket_id.obj [warning level: 2]\r\nping.obj [warning level: 2]\r\npkcs11.obj [warning level: 2]\r\npkcs11_openssl.obj [warning level: 2]\r\nplatform.obj [warning level: 2]\r\nplugin.obj [warning level: 2]\r\npool.obj [warning level: 2]\r\nproto.obj [warning level: 2]\r\nproxy.obj [warning level: 2]\r\npush.obj [warning level: 2]\r\nreliable.obj [warning level: 2]\r\nroute.obj [warning level: 2]\r\nrun_command.obj [warning level: 2]\r\nschedule.obj [warning level: 2]\r\nsig.obj [warning level: 2]\r\nsocket.obj [warning level: 2]\r\nsocks.obj [warning level: 2]\r\nssl.obj [warning level: 2]\r\nssl_ncp.obj [warning level: 2]\r\nssl_openssl.obj [warning level: 2]\r\nssl_util.obj [warning level: 2]\r\nssl_verify.obj [warning level: 2]\r\nssl_verify_openssl.obj [warning level: 2]\r\nstatus.obj [warning level: 2]\r\ntls_crypt.obj [warning level: 2]\r\ntun.obj [warning level: 2]\r\nvlan.obj [warning level: 2]\r\nwin32-util.obj [warning level: 2]\r\nwin32.obj [warning level: 2]\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2024",
          "ruleIndex": 5,
          "message": {
            "id": "Warning",
            "arguments": [
              "openvpn.exe",
              "The following modules were compiled with a toolset that supports /Qspectre but the switch was not enabled on the command-line:\r\nlz4.lib,c,19.29.30136.0 (lz4.c.obj)\r\n\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2025",
          "ruleIndex": 2,
          "message": {
            "id": "Warning",
            "arguments": [
              "openvpn.exe"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2026",
          "ruleIndex": 3,
          "message": {
            "id": "Warning",
            "arguments": [
              "openvpn.exe"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "message": {
            "id": "Warning_NativeWithInsecureStaticLibraryCompilands",
            "arguments": [
              "openvpnserv.exe",
              "Microsoft (R) ARM Macro Assembler : masm : 14.29.30034.2 : MSVCRT.lib (arm64secgs.obj,secpushpop.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : MSVCRT.lib (cpu_disp.obj,dyn_tls_dtor.obj,dyn_tls_init.obj,gs_cookie.obj,gs_report.obj,gs_support.obj,guard_support.obj,loadcfg.obj,matherr_detection.obj,ucrt_detection.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : MSVCRT.lib (argv_mode.obj,commit_mode.obj,default_local_stdio_options.obj,denormal_control.obj,env_mode.obj,exe_wmain.obj,file_mode.obj,gshandler.obj,initializers.obj,initsect.obj,invalid_parameter_handler.obj,matherr.obj,new_mode.obj,thread_locale.obj,tncleanup.obj,ucrt_stubs.obj,utility.obj,utility_desktop.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/openvpnserv.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "Error_NativeWithInsecureDirectCompilands",
            "arguments": [
              "openvpnserv.exe",
              "Microsoft (R) Optimizing Compiler : c : 19.29.30136.0 : [directly linked] (block_dns.obj,common.obj,interactive.obj,service.obj,validate.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/openvpnserv.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2025",
          "ruleIndex": 2,
          "message": {
            "id": "Warning",
            "arguments": [
              "openvpnserv.exe"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/openvpnserv.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2026",
          "ruleIndex": 3,
          "message": {
            "id": "Warning",
            "arguments": [
              "openvpnserv.exe"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/openvpnserv.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "message": {
            "id": "Warning_NativeWithInsecureStaticLibraryCompilands",
            "arguments": [
              "tapctl.exe",
              "Microsoft (R) ARM Macro Assembler : masm : 14.29.30034.2 : MSVCRT.lib (arm64secgs.obj,secpushpop.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : MSVCRT.lib (cpu_disp.obj,dyn_tls_dtor.obj,dyn_tls_init.obj,gs_cookie.obj,gs_report.obj,gs_support.obj,guard_support.obj,loadcfg.obj,matherr_detection.obj,ucrt_detection.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : MSVCRT.lib (argv_mode.obj,commit_mode.obj,default_local_stdio_options.obj,denormal_control.obj,env_mode.obj,exe_wmain.obj,file_mode.obj,gshandler.obj,initializers.obj,initsect.obj,invalid_parameter_handler.obj,matherr.obj,new_mode.obj,thread_locale.obj,tncleanup.obj,ucrt_stubs.obj,utility.obj,utility_desktop.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/tapctl.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "Error_NativeWithInsecureDirectCompilands",
            "arguments": [
              "tapctl.exe",
              "Microsoft (R) Optimizing Compiler : c : 19.29.30136.0 : [directly linked] (error.obj,main.obj,tap.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/tapctl.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2025",
          "ruleIndex": 2,
          "message": {
            "id": "Warning",
            "arguments": [
              "tapctl.exe"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/tapctl.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2026",
          "ruleIndex": 3,
          "message": {
            "id": "Warning",
            "arguments": [
              "tapctl.exe"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "arm64/tapctl.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2008",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "Error",
            "arguments": [
              "libcrypto-1_1.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/libcrypto-1_1.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "message": {
            "id": "Warning_NativeWithInsecureStaticLibraryCompilands",
            "arguments": [
              "libopenvpnmsica.dll",
              "Microsoft (R) Macro Assembler : masm : 14.29.30034.2 : LIBCMT.lib (alloca16.obj,chkstk.obj,ftol2.obj,lldvrm.obj,llmul.obj,llshl.obj,sehprolg4.obj,ulldiv.obj,ulldvrm.obj,ullshr.obj)\r\nMicrosoft (R) Macro Assembler : masm : 14.29.30034.2 : libvcruntime.lib (exsup.obj,exsup4.obj,lowhelpr.obj,memcpy.obj,memmove.obj,memset.obj,strchr.obj,strrchr.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : LIBCMT.lib (cpu_disp.obj,dyn_tls_init.obj,ehprolg3.obj,gs_cookie.obj,gs_report.obj,gs_support.obj,guard_support.obj,loadcfg.obj,pesect.obj,secchk.obj,ucrt_detection.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : libvcruntime.lib (chandler4.obj,jbcxrval.obj,memcmp.obj,wcschr.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : LIBCMT.lib (argv_mode.obj,chandler4_noexcept.obj,default_local_stdio_options.obj,default_precision.obj,delete_scalar.obj,delete_scalar_size.obj,dll_dllmain.obj,initializers.obj,initsect.obj,std_type_info_static.obj,tncleanup.obj,utility.obj,utility_desktop.obj,x86_exception_filter.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : libvcruntime.lib (ehhelpers.obj,ehstate.obj,frame.obj,initialization.obj,locks.obj,per_thread_data.obj,purevirt.obj,purevirt_data.obj,std_exception.obj,std_type_info.obj,throw.obj,trnsctrl.obj,undname.obj,unexpected.obj,winapi_downlevel.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/libopenvpnmsica.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "Error_NativeWithInsecureDirectCompilands",
            "arguments": [
              "libopenvpnmsica.dll",
              "Microsoft (R) Optimizing Compiler : c : 19.29.30136.0 : [directly linked] (dllmain.obj,error.obj,msica_arg.obj,msiex.obj,openvpnmsica.obj,tap.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/libopenvpnmsica.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2026",
          "ruleIndex": 3,
          "message": {
            "id": "Warning",
            "arguments": [
              "libopenvpnmsica.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/libopenvpnmsica.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2008",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "Error",
            "arguments": [
              "libpkcs11-helper-1.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/libpkcs11-helper-1.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2008",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "Error",
            "arguments": [
              "libssl-1_1.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/libssl-1_1.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2008",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "Error",
            "arguments": [
              "lzo2.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/lzo2.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "message": {
            "id": "Warning_NativeWithInsecureStaticLibraryCompilands",
            "arguments": [
              "openvpn.exe",
              "Microsoft (R) Macro Assembler : masm : 14.29.30034.2 : MSVCRT.lib (chkstk.obj,llmul.obj,sehprolg4.obj,ullshr.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : MSVCRT.lib (chandler4gs.obj,cpu_disp.obj,dyn_tls_dtor.obj,dyn_tls_init.obj,gs_cookie.obj,gs_report.obj,gs_support.obj,guard_support.obj,loadcfg.obj,matherr_detection.obj,secchk.obj,ucrt_detection.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30136.0 : compat.lib (compat-basename.obj,compat-daemon.obj,compat-dirname.obj,compat-gettimeofday.obj,compat-strsep.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30136.0 : lz4.lib (lz4.c.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : MSVCRT.lib (argv_mode.obj,commit_mode.obj,default_local_stdio_options.obj,default_precision.obj,denormal_control.obj,env_mode.obj,exe_wmain.obj,file_mode.obj,initializers.obj,initsect.obj,invalid_parameter_handler.obj,matherr.obj,new_mode.obj,thread_locale.obj,tncleanup.obj,ucrt_stubs.obj,utility.obj,utility_desktop.obj,x86_exception_filter.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "Error_NativeWithInsecureDirectCompilands",
            "arguments": [
              "openvpn.exe",
              "Microsoft (R) Optimizing Compiler : c : 19.29.30136.0 : [directly linked] (argv.obj,auth_token.obj,base64.obj,block_dns.obj,buffer.obj,clinat.obj,comp.obj,comp-lz4.obj,compstub.obj,console.obj,console_builtin.obj,crypto.obj,crypto_openssl.obj,cryptoapi.obj,dhcp.obj,env_set.obj,error.obj,event.obj,fdmisc.obj,forward.obj,fragment.obj,gremlin.obj,helper.obj,httpdigest.obj,init.obj,interval.obj,list.obj,lladdr.obj,lzo.obj,manage.obj,mbuf.obj,misc.obj,mroute.obj,mss.obj,mstats.obj,mtcp.obj,mtu.obj,mudp.obj,multi.obj,ntlm.obj,occ.obj,openvpn.obj,options.obj,otime.obj,packet_id.obj,perf.obj,ping.obj,pkcs11.obj,pkcs11_openssl.obj,platform.obj,plugin.obj,pool.obj,proto.obj,proxy.obj,ps.obj,push.obj,reliable.obj,route.obj,run_command.obj,schedule.obj,session_id.obj,shaper.obj,sig.obj,socket.obj,socks.obj,ssl.obj,ssl_ncp.obj,ssl_openssl.obj,ssl_util.obj,ssl_verify.obj,ssl_verify_openssl.obj,status.obj,tls_crypt.obj,tun.obj,vlan.obj,win32.obj,win32-util.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2007",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "id": "Error_InsufficientWarningLevel",
            "arguments": [
              "openvpn.exe",
              "2",
              "-c -ID:\\a\\openvpn\\openvpn\\src\\compat -ID:\\a\\openvpn\\openvpn\\ -ID:\\a\\openvpn\\openvpn\\ -ID:\\a\\openvpn\\openvpn\\include -ID:\\a\\openvpn\\openvpn\\vcpkg\\installed\\x86-windows-ovpn\\include -Zi -nologo -W2 -WX -diagnostics:column -O2 -Oi -Oy- -GL -D_CONSOLE -DNDEBUG -DWIN32 -Gm- -EHs -EHc -MD -GS -guard:cf -Gy -fp:precise -Qspectre -Zc:wchar_t -Zc:forScope -Zc:inline -external:W2 -Gd -TC -analyze- -FC -errorreport:queue -I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\include\" -I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\atlmfc\\include\" -I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\VS\\include\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\ucrt\" -I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\VS\\UnitTest\\include\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\um\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\shared\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\winrt\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\cppwinrt\" -I\"C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\Include\\um\" -external:I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\include\" -external:I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\atlmfc\\include\" -external:I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\VS\\include\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\ucrt\" -external:I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\VS\\UnitTest\\include\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\um\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\shared\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\winrt\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\cppwinrt\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\Include\\um\" -X",
              "argv.obj [warning level: 2]\r\nauth_token.obj [warning level: 2]\r\nbase64.obj [warning level: 2]\r\nblock_dns.obj [warning level: 2]\r\nbuffer.obj [warning level: 2]\r\nclinat.obj [warning level: 2]\r\ncomp-lz4.obj [warning level: 2]\r\ncomp.obj [warning level: 2]\r\ncompstub.obj [warning level: 2]\r\nconsole.obj [warning level: 2]\r\nconsole_builtin.obj [warning level: 2]\r\ncrypto.obj [warning level: 2]\r\ncryptoapi.obj [warning level: 2]\r\ncrypto_openssl.obj [warning level: 2]\r\ndhcp.obj [warning level: 2]\r\nenv_set.obj [warning level: 2]\r\nerror.obj [warning level: 2]\r\nevent.obj [warning level: 2]\r\nforward.obj [warning level: 2]\r\nfragment.obj [warning level: 2]\r\ngremlin.obj [warning level: 2]\r\nhelper.obj [warning level: 2]\r\nhttpdigest.obj [warning level: 2]\r\ninit.obj [warning level: 2]\r\ninterval.obj [warning level: 2]\r\nlist.obj [warning level: 2]\r\nlzo.obj [warning level: 2]\r\nmanage.obj [warning level: 2]\r\nmbuf.obj [warning level: 2]\r\nmisc.obj [warning level: 2]\r\nmroute.obj [warning level: 2]\r\nmss.obj [warning level: 2]\r\nmtcp.obj [warning level: 2]\r\nmtu.obj [warning level: 2]\r\nmudp.obj [warning level: 2]\r\nmulti.obj [warning level: 2]\r\nntlm.obj [warning level: 2]\r\nocc.obj [warning level: 2]\r\nopenvpn.obj [warning level: 2]\r\noptions.obj [warning level: 2]\r\notime.obj [warning level: 2]\r\npacket_id.obj [warning level: 2]\r\npkcs11.obj [warning level: 2]\r\npkcs11_openssl.obj [warning level: 2]\r\nplatform.obj [warning level: 2]\r\nplugin.obj [warning level: 2]\r\npool.obj [warning level: 2]\r\nproto.obj [warning level: 2]\r\nproxy.obj [warning level: 2]\r\npush.obj [warning level: 2]\r\nreliable.obj [warning level: 2]\r\nroute.obj [warning level: 2]\r\nrun_command.obj [warning level: 2]\r\nschedule.obj [warning level: 2]\r\nsig.obj [warning level: 2]\r\nsocket.obj [warning level: 2]\r\nsocks.obj [warning level: 2]\r\nssl.obj [warning level: 2]\r\nssl_ncp.obj [warning level: 2]\r\nssl_openssl.obj [warning level: 2]\r\nssl_util.obj [warning level: 2]\r\nssl_verify.obj [warning level: 2]\r\nssl_verify_openssl.obj [warning level: 2]\r\nstatus.obj [warning level: 2]\r\ntls_crypt.obj [warning level: 2]\r\ntun.obj [warning level: 2]\r\nvlan.obj [warning level: 2]\r\nwin32-util.obj [warning level: 2]\r\nwin32.obj [warning level: 2]\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2024",
          "ruleIndex": 5,
          "message": {
            "id": "Warning",
            "arguments": [
              "openvpn.exe",
              "The following modules were compiled with a toolset that supports /Qspectre but the switch was not enabled on the command-line:\r\nlz4.lib,c,19.29.30136.0 (lz4.c.obj)\r\n\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2026",
          "ruleIndex": 3,
          "message": {
            "id": "Warning",
            "arguments": [
              "openvpn.exe"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "message": {
            "id": "Warning_NativeWithInsecureStaticLibraryCompilands",
            "arguments": [
              "openvpnserv.exe",
              "Microsoft (R) Macro Assembler : masm : 14.29.30034.2 : MSVCRT.lib (sehprolg4.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : MSVCRT.lib (chandler4gs.obj,cpu_disp.obj,dyn_tls_dtor.obj,dyn_tls_init.obj,gs_cookie.obj,gs_report.obj,gs_support.obj,guard_support.obj,loadcfg.obj,matherr_detection.obj,secchk.obj,ucrt_detection.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : MSVCRT.lib (argv_mode.obj,commit_mode.obj,default_local_stdio_options.obj,default_precision.obj,denormal_control.obj,env_mode.obj,exe_wmain.obj,file_mode.obj,initializers.obj,initsect.obj,invalid_parameter_handler.obj,matherr.obj,new_mode.obj,thread_locale.obj,tncleanup.obj,ucrt_stubs.obj,utility.obj,utility_desktop.obj,x86_exception_filter.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/openvpnserv.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "Error_NativeWithInsecureDirectCompilands",
            "arguments": [
              "openvpnserv.exe",
              "Microsoft (R) Optimizing Compiler : c : 19.29.30136.0 : [directly linked] (block_dns.obj,common.obj,interactive.obj,service.obj,validate.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/openvpnserv.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2026",
          "ruleIndex": 3,
          "message": {
            "id": "Warning",
            "arguments": [
              "openvpnserv.exe"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/openvpnserv.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "message": {
            "id": "Warning_NativeWithInsecureStaticLibraryCompilands",
            "arguments": [
              "tapctl.exe",
              "Microsoft (R) Macro Assembler : masm : 14.29.30034.2 : MSVCRT.lib (sehprolg4.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : MSVCRT.lib (chandler4gs.obj,cpu_disp.obj,dyn_tls_dtor.obj,dyn_tls_init.obj,gs_cookie.obj,gs_report.obj,gs_support.obj,guard_support.obj,loadcfg.obj,matherr_detection.obj,secchk.obj,ucrt_detection.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : MSVCRT.lib (argv_mode.obj,commit_mode.obj,default_local_stdio_options.obj,default_precision.obj,denormal_control.obj,env_mode.obj,exe_wmain.obj,file_mode.obj,initializers.obj,initsect.obj,invalid_parameter_handler.obj,matherr.obj,new_mode.obj,thread_locale.obj,tncleanup.obj,ucrt_stubs.obj,utility.obj,utility_desktop.obj,x86_exception_filter.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/tapctl.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "Error_NativeWithInsecureDirectCompilands",
            "arguments": [
              "tapctl.exe",
              "Microsoft (R) Optimizing Compiler : c : 19.29.30136.0 : [directly linked] (error.obj,main.obj,tap.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/tapctl.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2026",
          "ruleIndex": 3,
          "message": {
            "id": "Warning",
            "arguments": [
              "tapctl.exe"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "win32/tapctl.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2008",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "Error",
            "arguments": [
              "libcrypto-1_1-x64.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/libcrypto-1_1-x64.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "message": {
            "id": "Warning_NativeWithInsecureStaticLibraryCompilands",
            "arguments": [
              "libopenvpnmsica.dll",
              "Microsoft (R) Macro Assembler : masm : 14.29.30034.2 : LIBCMT.lib (amdsecgs.obj,chkstk.obj,guard_dispatch.obj,guard_xfg_dispatch.obj)\r\nMicrosoft (R) Macro Assembler : masm : 14.29.30034.2 : libvcruntime.lib (handlers.obj,memcmp.obj,memcpy.obj,memset.obj,notify.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : LIBCMT.lib (cpu_disp.obj,dyn_tls_init.obj,gs_cookie.obj,gs_report.obj,gs_support.obj,guard_support.obj,loadcfg.obj,pesect.obj,ucrt_detection.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : libvcruntime.lib (jbcxrval.obj,jmpuwind.obj,strchr.obj,strrchr.obj,wcschr.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : LIBCMT.lib (argv_mode.obj,default_local_stdio_options.obj,delete_scalar.obj,delete_scalar_size.obj,dll_dllmain.obj,gshandler.obj,gshandlereh.obj,gshandlerseh.obj,initializers.obj,initsect.obj,std_type_info_static.obj,tncleanup.obj,utility.obj,utility_desktop.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : libvcruntime.lib (chandler_noexcept.obj,ehhelpers.obj,ehstate.obj,frame.obj,initialization.obj,locks.obj,per_thread_data.obj,purevirt.obj,purevirt_data.obj,riscchandler.obj,risctrnsctrl.obj,std_exception.obj,std_type_info.obj,throw.obj,undname.obj,winapi_downlevel.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/libopenvpnmsica.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "Error_NativeWithInsecureDirectCompilands",
            "arguments": [
              "libopenvpnmsica.dll",
              "Microsoft (R) Optimizing Compiler : c : 19.29.30136.0 : [directly linked] (dllmain.obj,error.obj,msica_arg.obj,msiex.obj,openvpnmsica.obj,tap.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/libopenvpnmsica.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2026",
          "ruleIndex": 3,
          "message": {
            "id": "Warning",
            "arguments": [
              "libopenvpnmsica.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/libopenvpnmsica.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2008",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "Error",
            "arguments": [
              "libpkcs11-helper-1.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/libpkcs11-helper-1.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2008",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "Error",
            "arguments": [
              "libssl-1_1-x64.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/libssl-1_1-x64.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2008",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "Error",
            "arguments": [
              "lzo2.dll"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/lzo2.dll"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "message": {
            "id": "Warning_NativeWithInsecureStaticLibraryCompilands",
            "arguments": [
              "openvpn.exe",
              "Microsoft (R) Macro Assembler : masm : 14.29.30034.2 : MSVCRT.lib (amdsecgs.obj,chkstk.obj,guard_dispatch.obj,guard_xfg_dispatch.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : MSVCRT.lib (cpu_disp.obj,dyn_tls_dtor.obj,dyn_tls_init.obj,gs_cookie.obj,gs_report.obj,gs_support.obj,guard_support.obj,loadcfg.obj,matherr_detection.obj,ucrt_detection.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30136.0 : compat.lib (compat-basename.obj,compat-daemon.obj,compat-dirname.obj,compat-gettimeofday.obj,compat-strsep.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30136.0 : lz4.lib (lz4.c.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : MSVCRT.lib (argv_mode.obj,commit_mode.obj,default_local_stdio_options.obj,denormal_control.obj,env_mode.obj,exe_wmain.obj,file_mode.obj,gshandler.obj,initializers.obj,initsect.obj,invalid_parameter_handler.obj,matherr.obj,new_mode.obj,thread_locale.obj,tncleanup.obj,ucrt_stubs.obj,utility.obj,utility_desktop.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "Error_NativeWithInsecureDirectCompilands",
            "arguments": [
              "openvpn.exe",
              "Microsoft (R) Optimizing Compiler : c : 19.29.30136.0 : [directly linked] (argv.obj,auth_token.obj,base64.obj,block_dns.obj,buffer.obj,clinat.obj,comp.obj,comp-lz4.obj,compstub.obj,console.obj,console_builtin.obj,crypto.obj,crypto_openssl.obj,cryptoapi.obj,dhcp.obj,env_set.obj,error.obj,event.obj,fdmisc.obj,forward.obj,fragment.obj,gremlin.obj,helper.obj,httpdigest.obj,init.obj,interval.obj,list.obj,lladdr.obj,lzo.obj,manage.obj,mbuf.obj,misc.obj,mroute.obj,mss.obj,mstats.obj,mtcp.obj,mtu.obj,mudp.obj,multi.obj,ntlm.obj,occ.obj,openvpn.obj,options.obj,otime.obj,packet_id.obj,perf.obj,ping.obj,pkcs11.obj,pkcs11_openssl.obj,platform.obj,plugin.obj,pool.obj,proto.obj,proxy.obj,ps.obj,push.obj,reliable.obj,route.obj,run_command.obj,schedule.obj,session_id.obj,shaper.obj,sig.obj,socket.obj,socks.obj,ssl.obj,ssl_ncp.obj,ssl_openssl.obj,ssl_util.obj,ssl_verify.obj,ssl_verify_openssl.obj,status.obj,tls_crypt.obj,tun.obj,vlan.obj,win32.obj,win32-util.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2007",
          "ruleIndex": 4,
          "level": "error",
          "message": {
            "id": "Error_InsufficientWarningLevel",
            "arguments": [
              "openvpn.exe",
              "2",
              "-c -ID:\\a\\openvpn\\openvpn\\src\\compat -ID:\\a\\openvpn\\openvpn\\ -ID:\\a\\openvpn\\openvpn\\ -ID:\\a\\openvpn\\openvpn\\include -ID:\\a\\openvpn\\openvpn\\vcpkg\\installed\\x64-windows-ovpn\\include -Zi -nologo -W2 -WX -diagnostics:column -O2 -Oi -GL -D_CONSOLE -DNDEBUG -DWIN32 -Gm- -EHs -EHc -MD -GS -guard:cf -Gy -fp:precise -Qspectre -Zc:wchar_t -Zc:forScope -Zc:inline -external:W2 -Gd -TC -FC -errorreport:queue -I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\include\" -I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\atlmfc\\include\" -I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\VS\\include\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\ucrt\" -I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\VS\\UnitTest\\include\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\um\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\shared\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\winrt\" -I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\cppwinrt\" -I\"C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\Include\\um\" -external:I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\include\" -external:I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Tools\\MSVC\\14.29.30133\\atlmfc\\include\" -external:I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\VS\\include\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\ucrt\" -external:I\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\VC\\Auxiliary\\VS\\UnitTest\\include\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\um\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\shared\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\winrt\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.22000.0\\cppwinrt\" -external:I\"C:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\Include\\um\" -X",
              "argv.obj [warning level: 2]\r\nauth_token.obj [warning level: 2]\r\nbase64.obj [warning level: 2]\r\nblock_dns.obj [warning level: 2]\r\nbuffer.obj [warning level: 2]\r\nclinat.obj [warning level: 2]\r\ncomp-lz4.obj [warning level: 2]\r\ncomp.obj [warning level: 2]\r\ncompstub.obj [warning level: 2]\r\nconsole.obj [warning level: 2]\r\nconsole_builtin.obj [warning level: 2]\r\ncrypto.obj [warning level: 2]\r\ncryptoapi.obj [warning level: 2]\r\ncrypto_openssl.obj [warning level: 2]\r\ndhcp.obj [warning level: 2]\r\nenv_set.obj [warning level: 2]\r\nerror.obj [warning level: 2]\r\nevent.obj [warning level: 2]\r\nforward.obj [warning level: 2]\r\nfragment.obj [warning level: 2]\r\ngremlin.obj [warning level: 2]\r\nhelper.obj [warning level: 2]\r\nhttpdigest.obj [warning level: 2]\r\ninit.obj [warning level: 2]\r\nlist.obj [warning level: 2]\r\nlzo.obj [warning level: 2]\r\nmanage.obj [warning level: 2]\r\nmbuf.obj [warning level: 2]\r\nmisc.obj [warning level: 2]\r\nmroute.obj [warning level: 2]\r\nmss.obj [warning level: 2]\r\nmtcp.obj [warning level: 2]\r\nmtu.obj [warning level: 2]\r\nmudp.obj [warning level: 2]\r\nmulti.obj [warning level: 2]\r\nntlm.obj [warning level: 2]\r\nocc.obj [warning level: 2]\r\nopenvpn.obj [warning level: 2]\r\noptions.obj [warning level: 2]\r\notime.obj [warning level: 2]\r\npacket_id.obj [warning level: 2]\r\nping.obj [warning level: 2]\r\npkcs11.obj [warning level: 2]\r\npkcs11_openssl.obj [warning level: 2]\r\nplatform.obj [warning level: 2]\r\nplugin.obj [warning level: 2]\r\npool.obj [warning level: 2]\r\nproto.obj [warning level: 2]\r\nproxy.obj [warning level: 2]\r\npush.obj [warning level: 2]\r\nreliable.obj [warning level: 2]\r\nroute.obj [warning level: 2]\r\nrun_command.obj [warning level: 2]\r\nschedule.obj [warning level: 2]\r\nsig.obj [warning level: 2]\r\nsocket.obj [warning level: 2]\r\nsocks.obj [warning level: 2]\r\nssl.obj [warning level: 2]\r\nssl_ncp.obj [warning level: 2]\r\nssl_openssl.obj [warning level: 2]\r\nssl_util.obj [warning level: 2]\r\nssl_verify.obj [warning level: 2]\r\nssl_verify_openssl.obj [warning level: 2]\r\nstatus.obj [warning level: 2]\r\ntls_crypt.obj [warning level: 2]\r\ntun.obj [warning level: 2]\r\nvlan.obj [warning level: 2]\r\nwin32-util.obj [warning level: 2]\r\nwin32.obj [warning level: 2]\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2024",
          "ruleIndex": 5,
          "message": {
            "id": "Warning",
            "arguments": [
              "openvpn.exe",
              "The following modules were compiled with a toolset that supports /Qspectre but the switch was not enabled on the command-line:\r\nlz4.lib,c,19.29.30136.0 (lz4.c.obj)\r\n\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2026",
          "ruleIndex": 3,
          "message": {
            "id": "Warning",
            "arguments": [
              "openvpn.exe"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/openvpn.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "message": {
            "id": "Warning_NativeWithInsecureStaticLibraryCompilands",
            "arguments": [
              "openvpnserv.exe",
              "Microsoft (R) Macro Assembler : masm : 14.29.30034.2 : MSVCRT.lib (amdsecgs.obj,guard_dispatch.obj,guard_xfg_dispatch.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : MSVCRT.lib (cpu_disp.obj,dyn_tls_dtor.obj,dyn_tls_init.obj,gs_cookie.obj,gs_report.obj,gs_support.obj,guard_support.obj,loadcfg.obj,matherr_detection.obj,ucrt_detection.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : MSVCRT.lib (argv_mode.obj,commit_mode.obj,default_local_stdio_options.obj,denormal_control.obj,env_mode.obj,exe_wmain.obj,file_mode.obj,gshandler.obj,initializers.obj,initsect.obj,invalid_parameter_handler.obj,matherr.obj,new_mode.obj,thread_locale.obj,tncleanup.obj,ucrt_stubs.obj,utility.obj,utility_desktop.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/openvpnserv.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "Error_NativeWithInsecureDirectCompilands",
            "arguments": [
              "openvpnserv.exe",
              "Microsoft (R) Optimizing Compiler : c : 19.29.30136.0 : [directly linked] (block_dns.obj,common.obj,interactive.obj,service.obj,validate.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/openvpnserv.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2026",
          "ruleIndex": 3,
          "message": {
            "id": "Warning",
            "arguments": [
              "openvpnserv.exe"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/openvpnserv.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "message": {
            "id": "Warning_NativeWithInsecureStaticLibraryCompilands",
            "arguments": [
              "tapctl.exe",
              "Microsoft (R) Macro Assembler : masm : 14.29.30034.2 : MSVCRT.lib (amdsecgs.obj,guard_dispatch.obj,guard_xfg_dispatch.obj)\r\nMicrosoft (R) Optimizing Compiler : c : 19.29.30034.2 : MSVCRT.lib (cpu_disp.obj,dyn_tls_dtor.obj,dyn_tls_init.obj,gs_cookie.obj,gs_report.obj,gs_support.obj,guard_support.obj,loadcfg.obj,matherr_detection.obj,ucrt_detection.obj)\r\nMicrosoft (R) Optimizing Compiler : cxx : 19.29.30034.2 : MSVCRT.lib (argv_mode.obj,commit_mode.obj,default_local_stdio_options.obj,denormal_control.obj,env_mode.obj,exe_wmain.obj,file_mode.obj,gshandler.obj,initializers.obj,initsect.obj,invalid_parameter_handler.obj,matherr.obj,new_mode.obj,thread_locale.obj,tncleanup.obj,ucrt_stubs.obj,utility.obj,utility_desktop.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/tapctl.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2004",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "Error_NativeWithInsecureDirectCompilands",
            "arguments": [
              "tapctl.exe",
              "Microsoft (R) Optimizing Compiler : c : 19.29.30136.0 : [directly linked] (error.obj,main.obj,tap.obj)\r\n"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/tapctl.exe"
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA2026",
          "ruleIndex": 3,
          "message": {
            "id": "Warning",
            "arguments": [
              "tapctl.exe"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uriBaseId": "ROOTPATH",
                  "uri": "x64/tapctl.exe"
                }
              }
            }
          ]
        }
      ],
      "tool": {
        "driver": {
          "name": "BinSkim",
          "organization": "Microsoft",
          "product": "BinSkim Portable Executable Analyzer",
          "fullName": "BinSkim 1.9.0.0",
          "version": "1.9.0.0",
          "semanticVersion": "1.9.0",
          "rules": [
            {
              "id": "BA2008",
              "name": "EnableControlFlowGuard",
              "fullDescription": {
                "text": "Binaries should enable the compiler control guard feature (CFG) at build time to prevent attackers from redirecting execution to unexpected, unsafe locations. CFG analyzes and discovers all indirect-call instructions at compilation and link time. It also injects a check that precedes every indirect call in code that ensures the target is an expected, safe location.  If that check fails at runtime, the operating system will close the program."
              },
              "messageStrings": {
                "Pass": {
                  "text": "'{0}' enables the control flow guard mitigation. As a result, the operating system will force an application to close if an attacker is able to redirect execution in the component to an unexpected location."
                },
                "Error": {
                  "text": "'{0}' does not enable the control flow guard (CFG) mitigation. To resolve this issue, pass /guard:cf on both the compiler and linker command lines. Binaries also require the /DYNAMICBASE linker option in order to enable CFG."
                },
                "NotApplicable_InvalidMetadata": {
                  "text": "'{0}' was not evaluated for check '{1}' as the analysis is not relevant based on observed metadata: {2}."
                },
                "NotApplicable_UnsupportedKernelModeVersion": {
                  "text": "'{0}' is a kernel mode portable executable compiled for a version of Windows that does not support the control flow guard feature for kernel mode binaries."
                }
              },
              "helpUri": "https://github.com/microsoft/binskim/blob/main/docs/BinSkimRules.md#rule-BA2008EnableControlFlowGuard",
              "help": {
                "text": "Binaries should enable the compiler control guard feature (CFG) at build time to prevent attackers from redirecting execution to unexpected, unsafe locations. CFG analyzes and discovers all indirect-call instructions at compilation and link time. It also injects a check that precedes every indirect call in code that ensures the target is an expected, safe location.  If that check fails at runtime, the operating system will close the program."
              },
              "properties": {
                "equivalentBinScopeRuleReadableName": "ControlFlowGuardCheck"
              }
            },
            {
              "id": "BA2004",
              "name": "EnableSecureSourceCodeHashing",
              "fullDescription": {
                "text": "Compilers can generate and store checksums of source files in order to provide linkage between binaries, their PDBs, and associated source code. This information is typically used to resolve source file when debugging but it can also be used to verify that a specific body of source code is, in fact, the code that was used to produce a specific set of binaries and PDBs. This validation is helpful in verifying supply chain integrity. Due to this security focus, it is important that the hashing algorithm used to produce checksums is secure. Legacy hashing algorithms, such as MD5 and SHA-1, have been demonstrated to be broken by modern hardware (that is, it is computationally feasible to force hash collisions, in which a common hash is generated from distinct files). Using a secure hashing algorithm, such as SHA-256, prevents the possibility of collision attacks, in which the checksum of a malicious file is used to produce a hash that satisfies the system that it is, in fact, the original file processed by the compiler. For managed binaries, pass '-checksumalgorithm:SHA256' on the csc.exe command-line or populate the '<ChecksumAlgorithm>' project property with 'SHA256' to enable secure source code hashing. For native binaries, pass '/ZH:SHA_256' on the cl.exe command-line to enable secure source code hashing."
              },
              "messageStrings": {
                "Pass": {
                  "text": "'{0}' is a {1} binary which was compiled with a secure (SHA-256) source code hashing algorithm."
                },
                "Warning_NativeWithInsecureStaticLibraryCompilands": {
                  "text": "'{0}' is a native binary that links one or more static libraries that include object files which were hashed using an insecure checksum algorithm (MD5). MD5 is subject to collision attacks and its use can compromise supply chain integrity. Pass '/ZH:SHA_256' on the cl.exe command-line to enable secure source code hashing. The following modules are out of policy:\r\n{1}"
                },
                "Error_Managed": {
                  "text": "'{0}' is a managed binary compiled with an insecure (SHA-1) source code hashing algorithm. SHA-1 is subject to collision attacks and its use can compromise supply chain integrity. Pass '-checksumalgorithm:SHA256' on the csc.exe command-line or populate the project <ChecksumAlgorithm> property with 'SHA256' to enable secure source code hashing."
                },
                "Error_NativeWithInsecureDirectCompilands": {
                  "text": "'{0}' is a native binary that directly compiles and links one or more object files which were hashed using an insecure checksum algorithm (MD5). MD5 is subject to collision attacks and its use can compromise supply chain integrity. Pass '/ZH:SHA_256' on the cl.exe command-line to enable secure source code hashing. The following modules are out of policy:\r\n{1}"
                },
                "NotApplicable_InvalidMetadata": {
                  "text": "'{0}' was not evaluated for check '{1}' as the analysis is not relevant based on observed metadata: {2}."
                }
              },
              "helpUri": "https://github.com/microsoft/binskim/blob/main/docs/BinSkimRules.md#rule-BA2004EnableSecureSourceCodeHashing",
              "help": {
                "text": "Compilers can generate and store checksums of source files in order to provide linkage between binaries, their PDBs, and associated source code. This information is typically used to resolve source file when debugging but it can also be used to verify that a specific body of source code is, in fact, the code that was used to produce a specific set of binaries and PDBs. This validation is helpful in verifying supply chain integrity. Due to this security focus, it is important that the hashing algorithm used to produce checksums is secure. Legacy hashing algorithms, such as MD5 and SHA-1, have been demonstrated to be broken by modern hardware (that is, it is computationally feasible to force hash collisions, in which a common hash is generated from distinct files). Using a secure hashing algorithm, such as SHA-256, prevents the possibility of collision attacks, in which the checksum of a malicious file is used to produce a hash that satisfies the system that it is, in fact, the original file processed by the compiler. For managed binaries, pass '-checksumalgorithm:SHA256' on the csc.exe command-line or populate the '<ChecksumAlgorithm>' project property with 'SHA256' to enable secure source code hashing. For native binaries, pass '/ZH:SHA_256' on the cl.exe command-line to enable secure source code hashing."
              }
            },
            {
              "id": "BA2025",
              "name": "EnableShadowStack",
              "fullDescription": {
                "text": "Control-flow Enforcement Technology (CET) Shadow Stack is a computer processor feature that provides capabilities to defend against return-oriented programming (ROP) based malware attacks."
              },
              "messageStrings": {
                "Pass": {
                  "text": "'{0}' enables the Control-flow Enforcement Technology (CET) Shadow Stack mitigation."
                },
                "Warning": {
                  "text": "'{0}' does not enable the Control-flow Enforcement Technology (CET) Shadow Stack mitigation. To resolve this issue, pass /CETCOMPAT on the linker command lines."
                },
                "NotApplicable_InvalidMetadata": {
                  "text": "'{0}' was not evaluated for check '{1}' as the analysis is not relevant based on observed metadata: {2}."
                }
              },
              "helpUri": "https://github.com/microsoft/binskim/blob/main/docs/BinSkimRules.md#rule-BA2025EnableShadowStack",
              "help": {
                "text": "Control-flow Enforcement Technology (CET) Shadow Stack is a computer processor feature that provides capabilities to defend against return-oriented programming (ROP) based malware attacks."
              }
            },
            {
              "id": "BA2026",
              "name": "EnableAdditionalSdlSecurityChecks",
              "fullDescription": {
                "text": "/sdl enables a superset of the baseline security checks provided by /GS and overrides /GS-. By default, /sdl is off. /sdl- disables the additional security checks."
              },
              "messageStrings": {
                "Pass": {
                  "text": "'{0}' is a Windows PE that was compiled with recommended Security Development Lifecycle (SDL) checks. These checks change security-relevant warnings into errors, and set additional secure code-generation features."
                },
                "Warning": {
                  "text": "'{0}' is a Windows PE that wasn't compiled with recommended Security Development Lifecycle (SDL) checks. As a result some critical compile-time and runtime checks may be disabled, increasing the possibility of an exploitable runtime issue. To resolve this problem, pass '/sdl' on the cl.exe command-line, set the 'SDL checks' property in the 'C/C++ -> General' Configuration property page, or explicitly set the 'SDLCheck' property in the project file (nested within a 'CLCompile' element) to 'true'."
                },
                "NotApplicable_InvalidMetadata": {
                  "text": "'{0}' was not evaluated for check '{1}' as the analysis is not relevant based on observed metadata: {2}."
                }
              },
              "helpUri": "https://github.com/microsoft/binskim/blob/main/docs/BinSkimRules.md#rule-BA2026EnableAdditionalSdlSecurityChecks",
              "help": {
                "text": "/sdl enables a superset of the baseline security checks provided by /GS and overrides /GS-. By default, /sdl is off. /sdl- disables the additional security checks."
              }
            },
            {
              "id": "BA2007",
              "name": "EnableCriticalCompilerWarnings",
              "fullDescription": {
                "text": "Binaries should be compiled with a warning level that enables all critical security-relevant checks. Enabling at least warning level 3 enables important static analysis in the compiler that can identify bugs with a potential to provoke memory corruption, information disclosure, or double-free vulnerabilities. To resolve this issue, compile at warning level 3 or higher by supplying /W3, /W4, or /Wall to the compiler, and resolve the warnings emitted."
              },
              "messageStrings": {
                "Pass": {
                  "text": "'{0}' was compiled at a secure warning level ({1}) and does not include any modules that disable specific warnings that are required by policy. As a result, it is less likely that memory corruption, information disclosure, double-free and other security-related vulnerabilities exist in code."
                },
                "Error_WarningsDisabled": {
                  "text": "'{0}' disables compiler warning(s) which are required by policy. A compiler warning is typically required if it has a high likelihood of flagging memory corruption, information disclosure, or double-free vulnerabilities. To resolve this issue, enable the indicated warning(s) by removing /Wxxxx switches (where xxxx is a warning id indicated here) from your command line, and resolve any warnings subsequently raised during compilation. An example compiler command line triggering this check was: {1}\r\nModules triggering this check were:\r\n{2}"
                },
                "Error_InsufficientWarningLevel": {
                  "text": "'{0}' was compiled at too low a warning level (effective warning level {1} for one or more modules). Warning level 3 enables important static analysis in the compiler to flag bugs that can lead to memory corruption, information disclosure, or double-free vulnerabilities. To resolve this issue, compile at warning level 3 or higher by supplying /W3, /W4, or /Wall to the compiler, and resolve the warnings emitted. An example compiler command line triggering this check: {2}\r\nModules triggering this check: {3}"
                },
                "Error_UnknownModuleLanguage": {
                  "text": "'{0}' contains code from an unknown language, preventing a comprehensive analysis of the compiler warning settings. The language could not be identified for the following modules: {1}"
                },
                "NotApplicable_InvalidMetadata": {
                  "text": "'{0}' was not evaluated for check '{1}' as the analysis is not relevant based on observed metadata: {2}."
                }
              },
              "helpUri": "https://github.com/microsoft/binskim/blob/main/docs/BinSkimRules.md#rule-BA2007EnableCriticalCompilerWarnings",
              "help": {
                "text": "Binaries should be compiled with a warning level that enables all critical security-relevant checks. Enabling at least warning level 3 enables important static analysis in the compiler that can identify bugs with a potential to provoke memory corruption, information disclosure, or double-free vulnerabilities. To resolve this issue, compile at warning level 3 or higher by supplying /W3, /W4, or /Wall to the compiler, and resolve the warnings emitted."
              },
              "properties": {
                "equivalentBinScopeRuleReadableName": "CompilerWarningsCheck"
              }
            },
            {
              "id": "BA2024",
              "name": "EnableSpectreMitigations",
              "fullDescription": {
                "text": "Application code should be compiled with the Spectre mitigations switch (/Qspectre) and toolsets that support it."
              },
              "messageStrings": {
                "Warning": {
                  "text": "'{0}' was compiled with one or more modules that do not enable code generation mitigations for speculative execution side-channel attack (Spectre) vulnerabilities. Spectre attacks can compromise hardware-based isolation, allowing non-privileged users to retrieve potentially sensitive data from the CPU cache. To resolve the issue, provide the /Qspectre switch on the compiler command-line (or /d2guardspecload in cases where your compiler supports this switch and it is not possible to update to a toolset that supports /Qspectre). This warning should be addressed for code that operates on data that crosses a trust boundary and that can affect execution, such as parsing untrusted file inputs or processing query strings of a web request.\r\n{1}"
                },
                "Warning_OptimizationsDisabled": {
                  "text": "The following modules were compiled with optimizations disabled (/Od), a condition that disables Spectre mitigations:\r\n{0}"
                },
                "Warning_SpectreMitigationNotEnabled": {
                  "text": "The following modules were compiled with a toolset that supports /Qspectre but the switch was not enabled on the command-line:\r\n{0}"
                },
                "Warning_SpectreMitigationExplicitlyDisabled": {
                  "text": "The following modules were compiled with Spectre mitigations explicitly disabled:\r\n{0}"
                },
                "Pass": {
                  "text": "All linked modules '{0}' were compiled with mitigations enabled that help prevent Spectre (speculative execution side-channel attack) vulnerabilities."
                },
                "NotApplicable_InvalidMetadata": {
                  "text": "'{0}' was not evaluated for check '{1}' as the analysis is not relevant based on observed metadata: {2}."
                }
              },
              "helpUri": "https://github.com/microsoft/binskim/blob/main/docs/BinSkimRules.md#rule-BA2024EnableSpectreMitigations",
              "help": {
                "text": "Application code should be compiled with the Spectre mitigations switch (/Qspectre) and toolsets that support it."
              }
            }
          ],
          "properties": {
            "Comments": "A security and correctness analyzer for portable executable and MSIL formats."
          }
        }
      },
      "invocations": [
        {
          "startTimeUtc": "2021-10-19T05:46:49.665Z",
          "endTimeUtc": "2021-10-19T05:48:50.256Z",
          "toolConfigurationNotifications": [
            {
              "locations": [
                {
                  "physicalLocation": {
                    "artifactLocation": {
                      "uri": "arm64/libcrypto-1_1-arm64.dll"
                    }
                  }
                }
              ],
              "message": {
                "text": "'libcrypto-1_1-arm64.dll' was not evaluated because its PDB could not be loaded (E_PDB_NOT_FOUND)."
              },
              "level": "error",
              "descriptor": {
                "id": "ERR997.ExceptionLoadingPdb"
              }
            },
            {
              "locations": [
                {
                  "physicalLocation": {
                    "artifactLocation": {
                      "uri": "arm64/libpkcs11-helper-1.dll"
                    }
                  }
                }
              ],
              "message": {
                "text": "'libpkcs11-helper-1.dll' was not evaluated because its PDB could not be loaded (E_PDB_NO_DEBUG_INFO)."
              },
              "level": "error",
              "descriptor": {
                "id": "ERR997.ExceptionLoadingPdb"
              }
            },
            {
              "locations": [
                {
                  "physicalLocation": {
                    "artifactLocation": {
                      "uri": "arm64/libssl-1_1-arm64.dll"
                    }
                  }
                }
              ],
              "message": {
                "text": "'libssl-1_1-arm64.dll' was not evaluated because its PDB could not be loaded (E_PDB_NOT_FOUND)."
              },
              "level": "error",
              "descriptor": {
                "id": "ERR997.ExceptionLoadingPdb"
              }
            },
            {
              "locations": [
                {
                  "physicalLocation": {
                    "artifactLocation": {
                      "uri": "arm64/lzo2.dll"
                    }
                  }
                }
              ],
              "message": {
                "text": "'lzo2.dll' was not evaluated because its PDB could not be loaded (E_PDB_NOT_FOUND)."
              },
              "level": "error",
              "descriptor": {
                "id": "ERR997.ExceptionLoadingPdb"
              }
            },
            {
              "locations": [
                {
                  "physicalLocation": {
                    "artifactLocation": {
                      "uri": "win32/libcrypto-1_1.dll"
                    }
                  }
                }
              ],
              "message": {
                "text": "'libcrypto-1_1.dll' was not evaluated because its PDB could not be loaded (E_PDB_NOT_FOUND)."
              },
              "level": "error",
              "descriptor": {
                "id": "ERR997.ExceptionLoadingPdb"
              }
            },
            {
              "locations": [
                {
                  "physicalLocation": {
                    "artifactLocation": {
                      "uri": "win32/libpkcs11-helper-1.dll"
                    }
                  }
                }
              ],
              "message": {
                "text": "'libpkcs11-helper-1.dll' was not evaluated because its PDB could not be loaded (E_PDB_NO_DEBUG_INFO)."
              },
              "level": "error",
              "descriptor": {
                "id": "ERR997.ExceptionLoadingPdb"
              }
            },
            {
              "locations": [
                {
                  "physicalLocation": {
                    "artifactLocation": {
                      "uri": "win32/libssl-1_1.dll"
                    }
                  }
                }
              ],
              "message": {
                "text": "'libssl-1_1.dll' was not evaluated because its PDB could not be loaded (E_PDB_NOT_FOUND)."
              },
              "level": "error",
              "descriptor": {
                "id": "ERR997.ExceptionLoadingPdb"
              }
            },
            {
              "locations": [
                {
                  "physicalLocation": {
                    "artifactLocation": {
                      "uri": "win32/lzo2.dll"
                    }
                  }
                }
              ],
              "message": {
                "text": "'lzo2.dll' was not evaluated because its PDB could not be loaded (E_PDB_NOT_FOUND)."
              },
              "level": "error",
              "descriptor": {
                "id": "ERR997.ExceptionLoadingPdb"
              }
            },
            {
              "locations": [
                {
                  "physicalLocation": {
                    "artifactLocation": {
                      "uri": "x64/libcrypto-1_1-x64.dll"
                    }
                  }
                }
              ],
              "message": {
                "text": "'libcrypto-1_1-x64.dll' was not evaluated because its PDB could not be loaded (E_PDB_NOT_FOUND)."
              },
              "level": "error",
              "descriptor": {
                "id": "ERR997.ExceptionLoadingPdb"
              }
            },
            {
              "locations": [
                {
                  "physicalLocation": {
                    "artifactLocation": {
                      "uri": "x64/libpkcs11-helper-1.dll"
                    }
                  }
                }
              ],
              "message": {
                "text": "'libpkcs11-helper-1.dll' was not evaluated because its PDB could not be loaded (E_PDB_NO_DEBUG_INFO)."
              },
              "level": "error",
              "descriptor": {
                "id": "ERR997.ExceptionLoadingPdb"
              }
            },
            {
              "locations": [
                {
                  "physicalLocation": {
                    "artifactLocation": {
                      "uri": "x64/libssl-1_1-x64.dll"
                    }
                  }
                }
              ],
              "message": {
                "text": "'libssl-1_1-x64.dll' was not evaluated because its PDB could not be loaded (E_PDB_NOT_FOUND)."
              },
              "level": "error",
              "descriptor": {
                "id": "ERR997.ExceptionLoadingPdb"
              }
            },
            {
              "locations": [
                {
                  "physicalLocation": {
                    "artifactLocation": {
                      "uri": "x64/lzo2.dll"
                    }
                  }
                }
              ],
              "message": {
                "text": "'lzo2.dll' was not evaluated because its PDB could not be loaded (E_PDB_NOT_FOUND)."
              },
              "level": "error",
              "descriptor": {
                "id": "ERR997.ExceptionLoadingPdb"
              }
            }
          ],
          "executionSuccessful": false
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}