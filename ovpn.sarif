{
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.6.json",
  "version": "2.1.0",
  "runs": [
    {
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///C:/Task/Sarif/User/GHAS/TestRepoRoot/"
        }
      },
      "results": [
        {
          "ruleId": "BA3004",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "id": "Error", "text": "sample message text 1",
            "arguments": [
              "gcc.requiredsymbol.4.o",
              "4"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "gcc.requiredsymbol.4.o",
                  "index": 0
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA3003",
          "ruleIndex": 1,
          "level": "error",
          "message": {
            "id": "Error", "text": "sample message text 2",
            "arguments": [
              "clang.14.elf.c.no_safe_stack",
              "clang.14.elf.c.no_safe_stack"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "SubDir1/clang.14.elf.c.no_safe_stack",
                  "index": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA3011",
          "ruleIndex": 2,
          "level": "error",
          "message": {
            "id": "Error", "text": "sample message text 3",
            "arguments": [
              "clang.14.elf.c.no_safe_stack"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "SubDir1/clang.14.elf.c.no_safe_stack",
                  "index": 1
                }
              }
            }
          ]
        },
        {
          "ruleId": "BA3031",
          "ruleIndex": 3,
          "level": "error",
          "message": {
            "id": "Error", "text": "sample message text 4",
            "arguments": [
              "clang.14.elf.c.no_safe_stack"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "SubDir1/clang.14.elf.c.no_safe_stack",
                  "index": 1
                }
              }
            }
          ]
        }
      ],
      "tool": {
        "driver": {
          "name": "BinSkim",
          "organization": "Microsoft",
          "product": "BinSkim Portable Executable Analyzer",
          "fullName": "BinSkim 2.0.0.0",
          "version": "2.0.0.0",
          "semanticVersion": "2.0.0",
          "rules": [
            {
              "id": "BA3004",
              "name": "GenerateRequiredSymbolFormat",
              "fullDescription": {
                "text": "This check ensures that debugging dwarf version used is 5. The dwarf version 5 contains more information and should be used. Use the compiler flags '-gdwarf-5' to enable this."
              },
              "help": {
                "text": "This check ensures that debugging dwarf version used is 5. The dwarf version 5 contains more information and should be used. Use the compiler flags '-gdwarf-5' to enable this."
              },
              "messageStrings": {
                "Pass": {
                  "text": "The version of the debugging dwarf format is '{0}' for the file '{1}'"
                },
                "Error": {
                  "text": "'{0}' is using debugging dwarf version '{1}'. The dwarf version 5 contains more information and should be used. To enable the debugging version 5 use '-gdwarf-5'."
                },
                "NotApplicable_InvalidMetadata": {
                  "text": "'{0}' was not evaluated for check '{1}' as the analysis is not relevant based on observed metadata: {2}."
                }
              },
              "helpUri": "https://github.com/microsoft/binskim/blob/main/docs/BinSkimRules.md#rule-BA3004GenerateRequiredSymbolFormat"
            },
            {
              "id": "BA3003",
              "name": "EnableStackProtector",
              "fullDescription": {
                "text": "The stack protector ensures that all functions that use buffers over a certain size will use a stack cookie (and check it) to prevent stack based buffer overflows, exiting if stack smashing is detected. Use '--fstack-protector-strong' (all buffers of 4 bytes or more) or '--fstack-protector-all' (all functions) to enable this."
              },
              "help": {
                "text": "The stack protector ensures that all functions that use buffers over a certain size will use a stack cookie (and check it) to prevent stack based buffer overflows, exiting if stack smashing is detected. Use '--fstack-protector-strong' (all buffers of 4 bytes or more) or '--fstack-protector-all' (all functions) to enable this."
              },
              "messageStrings": {
                "Pass": {
                  "text": "Stack protector was found on '{0}'.  However, if you are not compiling with '--stack-protector-strong', it may provide additional protections."
                },
                "Error": {
                  "text": "The stack protector was not found in '{0}'. This may be because '--stack-protector-strong' was not used, or because it was explicitly disabled by '-fno-stack-protectors'.\r\nModules did not meet the criteria: {1}"
                },
                "NotApplicable_InvalidMetadata": {
                  "text": "'{0}' was not evaluated for check '{1}' as the analysis is not relevant based on observed metadata: {2}."
                }
              },
              "helpUri": "https://github.com/microsoft/binskim/blob/main/docs/BinSkimRules.md#rule-BA3003EnableStackProtector"
            },
            {
              "id": "BA3011",
              "name": "EnableBindNow",
              "fullDescription": {
                "text": "This check ensures that some relocation data is marked as read only after the executable is loaded, and moved below the '.data' section in memory. This prevents them from being overwritten, which can redirect control flow. Use the compiler flags '-Wl,-z,now' to enable this."
              },
              "help": {
                "text": "This check ensures that some relocation data is marked as read only after the executable is loaded, and moved below the '.data' section in memory. This prevents them from being overwritten, which can redirect control flow. Use the compiler flags '-Wl,-z,now' to enable this."
              },
              "messageStrings": {
                "Pass": {
                  "text": "The BIND_NOW flag was present, so '{0}' is protected."
                },
                "Error": {
                  "text": "The BIND_NOW flag is missing from this binary, so relocation sections in '{0}' will not be marked as read only after the binary is loaded.  An attacker can overwrite these to redirect control flow.  Ensure you are compiling with the compiler flags '-Wl,-z,now' to address this."
                },
                "NotApplicable_InvalidMetadata": {
                  "text": "'{0}' was not evaluated for check '{1}' as the analysis is not relevant based on observed metadata: {2}."
                }
              },
              "helpUri": "https://github.com/microsoft/binskim/blob/main/docs/BinSkimRules.md#rule-BA3011EnableBindNow"
            },
            {
              "id": "BA3031",
              "name": "EnableClangSafeStack",
              "fullDescription": {
                "text": "The SafeStack instrumentation pass protects programs by implementing two separate program stacks, one for return addresses and local variables, and the other for everything else. To enable SafeStack, pass '-fsanitize=safe-stack' flag to both compile and link command lines."
              },
              "help": {
                "text": "The SafeStack instrumentation pass protects programs by implementing two separate program stacks, one for return addresses and local variables, and the other for everything else. To enable SafeStack, pass '-fsanitize=safe-stack' flag to both compile and link command lines."
              },
              "messageStrings": {
                "Pass": {
                  "text": "'{0}' was compiled using Clang and with the SafeStack instrumentation pass, which mitigates the risk of stack-based buffer overflows."
                },
                "Error": {
                  "text": "'{0}' was compiled using Clang but without the SafeStack instrumentation pass, which should be used to mitigate the risk of stack-based buffer overflows. To enable SafeStack, pass '-fsanitize=safe-stack' flag to both compile and link command lines."
                },
                "Error_ClangVersionMayNeedUpgrade": {
                  "text": "'{0}' was compiled using Clang but without the SafeStack instrumentation pass, which should be used to mitigate the risk of stack-based buffer overflows. To enable SafeStack, pass '-fsanitize=safe-stack' flag to both compile and link command lines. You might need to update your version of Clang to enable it."
                },
                "NotApplicable_InvalidMetadata": {
                  "text": "'{0}' was not evaluated for check '{1}' as the analysis is not relevant based on observed metadata: {2}."
                }
              },
              "helpUri": "https://github.com/microsoft/binskim/blob/main/docs/BinSkimRules.md#rule-BA3031EnableClangSafeStack"
            }
          ],
          "properties": {
            "Comments": "A security and correctness analyzer for portable executable and MSIL formats."
          }
        }
      },
      "invocations": [
        {
          "startTimeUtc": "2022-11-30T07:33:50.634Z",
          "endTimeUtc": "2022-11-30T07:33:50.901Z",
          "executionSuccessful": true
        }
      ],
      "artifacts": [
        {
          "location": {
            "uri": "gcc.requiredsymbol.4.o"
          }
        },
        {
          "location": {
            "uri": "SubDir1/clang.14.elf.c.no_safe_stack"
          }
        }
      ],
      "columnKind": "utf16CodeUnits"
    }
  ]
}